services:
  db:
    image: postgres:16.8-alpine3.20
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ecommerce_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    ports:
      - 5672:5672   # Porta padr√£o do AMQP
      - 15672:15672 # Interface de gerenciamento
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    ports:
      - 3000:3000
    depends_on:
      rabbitmq:
        condition: service_started
    environment:
      NODE_ENV: development

  product-service:
    build:
      context: .
      dockerfile: apps/product-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin123
    command: sh -c "npx prisma migrate deploy && npm run start product-service"

  cart-service:
    build:
      context: .
      dockerfile: apps/cart-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin123
    command: sh -c "npx prisma migrate deploy && npm run start cart-service"

  notification-service:
    build:
      context: .
      dockerfile: apps/notification-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin123
    command: sh -c "npx prisma migrate deploy && npm run start notification-service"

  order-service:
    build:
      context: .
      dockerfile: apps/order-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin123
    command: sh -c "npx prisma migrate deploy && npm run start order-service"

  payment-service:
    build:
      context: .
      dockerfile: apps/payment-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin123
    command: sh -c "npx prisma migrate deploy && npm run start payment-service"

  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/ecommerce_db
      RABBITMQ_URL: amqp://rabbitmq:5672
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin123
    command: sh -c "npx prisma migrate deploy && npm run start user-service"

volumes:
  rabbitmq_data: 